{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "letspq": {
      "projectType": "application",
      "schematics": {},
      "root": "",
      "sourceRoot": "src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/letspq",
            "index": "src/index.html",
            "main": "src/main.ts",
            "polyfills": "src/polyfills.ts",
            "tsConfig": "tsconfig.app.json",
            "aot": true,
            "assets": [
              {
                "glob": "**/*",
                "input": "node_modules/monaco-editor/min/vs",
                "output": "./vs/"
              },
              {
                "glob": "**/*",
                "input": "node_modules/monaco-editor/min-maps",
                "output": "./min-maps/"
              },
              "src/favicon.ico",
              "src/assets",
              "src/web.config"
            ],
            "styles": [
              "./node_modules/@angular/material/prebuilt-themes/indigo-pink.css",
              "src/styles.css",
              "./node_modules/quill/dist/quill.core.css",
              "./node_modules/quill/dist/quill.snow.css",
              "src/assets/css/flowy.min.css"            ],
            "scripts": [
              "node_modules/quill/dist/quill.js",
              "src/assets/js/flowy.min.js",
              "node_modules/ngx-blockly/scripts/blockly/blockly_compressed.js",
              "node_modules/ngx-blockly/scripts/blockly/blocks_compressed.js",
              "node_modules/ngx-blockly/scripts/blockly/python_compressed.js",
              "node_modules/ngx-blockly/scripts/blockly/javascript_compressed.js",
              "node_modules/ngx-blockly/scripts/blockly/php_compressed.js",
              "node_modules/ngx-blockly/scripts/blockly/dart_compressed.js",
              "node_modules/ngx-blockly/scripts/blockly/lua_compressed.js",
              "node_modules/ngx-blockly/scripts/blockly/msg/js/en.js",
              "node_modules/glslCanvas/dist/GlslCanvas.min.js"
            ]
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "4mb",
                  "maximumError": "7mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "letspq:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "letspq:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "letspq:build"
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "src/test.ts",
            "polyfills": "src/polyfills.ts",
            "tsConfig": "tsconfig.spec.json",
            "karmaConfig": "karma.conf.js",
            "assets": [
              "src/favicon.ico",
              "src/assets",
              "src/web.config",
              {
                "glob": "**/*",
                "input": "node_modules/monaco-editor/min/vs",
                "output": "./lib/vs"
              }
            ],
            "styles": [
              "node_modules/angular-calendar/css/angular-calendar.css",
              "./node_modules/@angular/material/prebuilt-themes/indigo-pink.css",
              "src/styles.css",
              "./node_modules/quill/dist/quill.core.css",
              "./node_modules/quill/dist/quill.snow.css",
              "src/assets/css/flowy.min.css"
            ],
            "scripts": [
              "node_modules/quill/dist/quill.js",
              "src/assets/js/flowy.min.js",
              "node_modules/ngx-blockly/scripts/blockly/blockly_compressed.js",
              "node_modules/ngx-blockly/scripts/blockly/blocks_compressed.js",
              "node_modules/ngx-blockly/scripts/blockly/python_compressed.js",
              "node_modules/ngx-blockly/scripts/blockly/javascript_compressed.js",
              "node_modules/ngx-blockly/scripts/blockly/php_compressed.js",
              "node_modules/ngx-blockly/scripts/blockly/dart_compressed.js",
              "node_modules/ngx-blockly/scripts/blockly/lua_compressed.js",
              "node_modules/ngx-blockly/scripts/blockly/msg/js/en.js",
              "node_modules/glslCanvas/dist/GlslCanvas.min.js"
            ]
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "tsconfig.app.json",
              "tsconfig.spec.json",
              "e2e/tsconfig.json"
            ],
            "exclude": [
              "**/node_modules/**"
            ]
          }
        },
        "e2e": {
          "builder": "@angular-devkit/build-angular:protractor",
          "options": {
            "protractorConfig": "e2e/protractor.conf.js",
            "devServerTarget": "letspq:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "letspq:serve:production"
            }
          }
        }
      }
    }
  },
  "defaultProject": "letspq"
}
